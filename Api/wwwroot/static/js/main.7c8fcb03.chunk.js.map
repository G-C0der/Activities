{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoCropperWidget.tsx","app/common/imageUpload/PhotoDropWidget.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErros","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","userName","edit","profile","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","selectActivity","userStore","isGoing","attendees","some","isHost","hostUserName","host","find","x","Date","state","createActivity","attendee","newActivity","runInAction","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","setImage","setDisplayName","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","loadingActivities","setActiveTab","loadProfile","updateProfile","photo","photos","isMain","p","activityStore","targetCount","loadFollowings","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","e","preventDefault","handleFollow","Card","Header","Description","line","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","size","circular","bordered","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","clearing","floated","groupedActivites","group","sub","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","secondary","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","validationSchema","Yup","required","isValid","dirty","isLoggedIn","loadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","Actions","Action","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","length","relaxed","divided","Extra","TestErrors","widths","baseUrl","err","primary","NotFound","Inline","message","Modal","onClose","setEditMode","ProfileAbout","isCurrentUser","editMode","Tab","Pane","GridColumn","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoCropperWidget","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoDropWidget","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","includes","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.7c8fcb03.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n    \r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n    \r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, {AxiosError, AxiosResponse} from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { history } from '../../index';\r\nimport { store } from '../stores/store';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport {Photo, Profile, UserActivity } from '../models/profile';\r\nimport { PaginatedResult } from '../models/pagination';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const {data, status, config} = error.response!;\r\n    \r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === 'string') {\r\n                toast.error(data);\r\n            }\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                // When GUID not found\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErros = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErros.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modalStateErros.flat();\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorised');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T> (url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params})\r\n        .then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n}\r\n\r\nconst Profiles = {\r\n    get: (userName: string) => requests.get<Profile>(`/profiles/${userName}`),\r\n    edit: (profile: Partial<Profile>) => requests.put<void>('/profiles', profile),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('/photos', formData, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        }).then(responseBody);\r\n    },\r\n    setMainPhoto: (id: string) => requests.post<void>(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.del<void>(`/photos/${id}`),\r\n    updateFollowing: (userName: string) => requests.post(`/followings/${userName}`, {}),\r\n    listFollowings: (userName: string, predicate: string) => \r\n        requests.get<Profile[]>(`/followings/${userName}?predicate=${predicate}`),\r\n    listActivities: (userName: string, predicate: string) => \r\n        requests.get<UserActivity[]>(`/profiles/${userName}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\n\nexport interface Activity {\n    id: string;\n    title: string;\n    date: Date | null;\n    description: string;\n    category: string;\n    city: string;\n    venue: string;\n    hostUserName: string;\n    isCancelled: boolean;\n    isGoing: boolean;\n    isHost: boolean;\n    host?: Profile;\n    attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n    constructor(init?: ActivityFormValues) {\n        Object.assign(this, init);\n    }\n}\n\nexport class ActivityFormValues {\n    id?: string = undefined;\n    title: string = '';\n    category: string = '';\n    description: string = '';\n    date: Date | null = null;\n    city: string = '';\n    venue: string = '';\n\n    constructor(activity?: ActivityFormValues) {\n        if (activity) {\n            this.id = activity.id;\n            this.title = activity.title;\n            this.category = activity.category;\n            this.description = activity.description;\n            this.date = activity.date;\n            this.city = activity.city;\n            this.venue = activity.venue;\n            // Object.assign(this, activity);\n        }\n    }\n\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    userName: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    targetCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.userName = user.userName;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import {makeAutoObservable, reaction, runInAction} from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport {Activity, ActivityFormValues} from \"../models/activity\";\r\nimport {format} from \"date-fns\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n        \r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n    \r\n    setPredicate = (predicate: string, value: boolean | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n    \r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n    \r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n            a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivites() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n    \r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach(activity => {\r\n                this.setActivity(activity);\r\n            });\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n    \r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.setLoadingInitial(true);\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                this.selectActivity(activity);\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(\r\n                a => a.userName === user.userName\r\n            )\r\n            activity.isHost = activity.hostUserName === user.userName;\r\n            activity.host = activity.attendees?.find(x => x.userName === activity.hostUserName);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n    \r\n    private selectActivity = (activity: Activity) => {\r\n        this.selectedActivity = activity;\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUserName = user!.userName;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity};\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n    \r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if (this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees = this.selectedActivity.attendees\r\n                        ?.filter(a => a.userName !== user?.userName);\r\n                    this.selectedActivity.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity!.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n    \r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity!.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n    \r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n    \r\n    updateAttendeeFollowing = (userName: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.userName === userName) {\r\n                    attendee.following = !attendee.following;\r\n                    attendee.following ? attendee.followersCount++ : attendee.followersCount--;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import {makeAutoObservable, runInAction} from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport {User, UserFormValues} from \"../models/user\";\r\nimport {store} from \"./store\";\r\nimport {history} from \"../../index\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n    \r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    setImage = (image: string) => {\r\n        if (this.user) this.user.image = image;\r\n    }\r\n    \r\n    setDisplayName = (displayName: string) => {\r\n        if (this.user) this.user.displayName = displayName;\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport {Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    activities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n    \r\n    constructor() {\r\n        makeAutoObservable(this);\r\n        \r\n        reaction(\r\n            () => this.activeTab,\r\n            activeTab => {\r\n                if (activeTab === 3 || activeTab === 4) {\r\n                    const predicate = activeTab === 3 ? 'followers' : 'targets';\r\n                    this.loadFollowings(predicate);\r\n                } else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n    \r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n    \r\n    get isCurrentUser() {\r\n        return store.userStore.user && this.profile\r\n            ? store.userStore.user.userName === this.profile.userName\r\n            : false;\r\n    }\r\n    \r\n    loadProfile = async (userName: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(userName);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n    \r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.edit(profile);\r\n            if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                store.userStore.setDisplayName(profile.displayName);\r\n            }\r\n            runInAction(() => {\r\n                this.profile = {...this.profile, ...profile as Profile};\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n    \r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const photo = await agent.Profiles.uploadPhoto(file);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n                this.uploading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n    \r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos = this.profile.photos.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n    \r\n    updateFollowing = async (userName: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(userName);\r\n            store.activityStore.updateAttendeeFollowing(userName);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.userName !== store.userStore.user?.userName && \r\n                    this.profile.userName === userName) {\r\n                    this.profile.following = !this.profile.following;\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                }\r\n                if (this.profile && this.profile.userName === store.userStore.user?.userName) {\r\n                    this.profile.following = !this.profile.following;\r\n                    following ? this.profile.targetCount++ : this.profile.targetCount--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.userName === userName) {\r\n                        profile.following = !profile.following;\r\n                        profile.following ? profile.followersCount++ : profile.followersCount--;\r\n                    }\r\n                })\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n    \r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.userName, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n    }\r\n\r\n    loadActivities = async (predicate?: string) => {\r\n        this.loadingActivities = true;\r\n        try {\r\n            const result = await agent.Profiles.listActivities(this.profile!.userName, predicate!);\r\n            runInAction(() => {\r\n                this.activities = result;\r\n                this.loadingActivities = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingActivities = false);\r\n        }\r\n    }\r\n}","import ActivityStore from \"./activityStore\";\r\nimport {createContext, useContext} from \"react\";\r\nimport CommonStore from \"./commonStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport CommentStore from \"./commentStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}","import { ServerError } from \"../models/serverError\";\r\nimport {makeAutoObservable, reaction} from \"mobx\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n    \r\n    constructor() {\r\n        makeAutoObservable(this);\r\n        \r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt');\r\n                }\r\n            }\r\n        )\r\n    }\r\n    \r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n    \r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n    \r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n    \r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n    \r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n    \r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import {HubConnection, HubConnectionBuilder, LogLevel} from \"@microsoft/signalr\";\r\nimport {makeAutoObservable, runInAction} from \"mobx\";\r\nimport {ChatComment} from \"../models/comment\";\r\nimport {store} from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n    \r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n    \r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n            \r\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\r\n            \r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments;\r\n                });\r\n            })\r\n            \r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment);\r\n                });\r\n            })\r\n        }\r\n    }\r\n    \r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\r\n    }\r\n    \r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n    \r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import React from 'react';\nimport {Button, Container, Menu, Image, Dropdown} from 'semantic-ui-react';\nimport {Link, NavLink} from \"react-router-dom\";\nimport { useStore } from '../stores/store';\nimport { observer } from 'mobx-react-lite';\n\nexport default observer(function NavBar() {\n    const {userStore: {user, logout}} = useStore();\n    \n    return (\n        <Menu inverted fixed=\"top\">\n            <Container>\n                <Menu.Item as={NavLink} to='/' exact header>\n                    <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: 10}}/>\n                    Reactivities\n                </Menu.Item>\n                <Menu.Item as={NavLink} to='/activities' name=\"Activities\"/>\n                <Menu.Item as={NavLink} to='/errors' name=\"Errors\"/>\n                <Menu.Item>\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity'/>\n                </Menu.Item>\n                <Menu.Item position='right'>\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\n                    <Dropdown pointing='top left' text={user?.displayName}>\n                        <Dropdown.Menu>\n                            <Dropdown.Item as={Link} to={`/profiles/${user?.userName}`} text='My Profile' icon='user' />\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Menu.Item>\n            </Container>\n        </Menu>\n    );\n})","import { observer } from 'mobx-react-lite';\r\nimport React, {SyntheticEvent} from 'react';\r\nimport {Button, Reveal} from \"semantic-ui-react\";\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({profile}: Props) {\r\n    const {profileStore: {updateFollowing, loading}, userStore} = useStore();\r\n    \r\n    if (userStore.user?.userName === profile.userName) return null;\r\n    \r\n    function handleFollow(e: SyntheticEvent, userName: string) {\r\n        e.preventDefault();\r\n        profile.following ? updateFollowing(userName, false) : updateFollowing(userName, true);\r\n    }\r\n    \r\n    return (\r\n        <Reveal animated='move'>\r\n            <Reveal.Content visible style={{width: '100%'}}>\r\n                <Button \r\n                    fluid color={profile.following ? 'teal' : 'grey'}\r\n                    content={profile.following ? 'Following' : 'Not following'}\r\n                />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden style={{width: '100%'}}>\r\n                <Button\r\n                    fluid\r\n                    basic\r\n                    color={profile.following ? 'red' : 'green'}\r\n                    content={profile.following ? 'Unfollow' : 'Follow'}\r\n                    loading={loading}\r\n                    onClick={e => handleFollow(e, profile.userName)}\r\n                />\r\n            </Reveal.Content>\r\n        </Reveal>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport TextTruncate from \"react-text-truncate\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({profile}: Props) {\r\n    return (\r\n        <Card as={Link} to={`/profiles/${profile.userName}`}>\r\n            <Image src={profile.image || '/assets/user.png'} />\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description>\r\n                    <TextTruncate line={1} text={profile.bio || 'Bio goes here'} />                        \r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name='user' />\r\n                {profile.followersCount} followers\r\n            </Card.Content>\r\n            <FollowButton profile={profile} />\r\n        </Card>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Image, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({attendees}: Props) {\r\n    const styles = {\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n    \r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee => (\r\n                <Popup \r\n                    hoverable\r\n                    key={attendee.userName}\r\n                    trigger={\r\n                        <List.Item key={attendee.userName} as={Link} to={`/profiles/${attendee.userName}`}>\r\n                            <Image \r\n                                size='mini' \r\n                                circular src={attendee.image || '/assets/user.png'} \r\n                                bordered\r\n                                style={attendee.following ? styles : null}\r\n                            />\r\n                        </List.Item>\r\n                    }\r\n                >\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee} />\r\n                    </Popup.Content>\r\n                </Popup>\r\n            ))}\r\n        </List>\r\n    )\r\n})","import React from 'react';\r\nimport {Button, Icon, Item, Label, Segment} from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Activity} from '../../../app/models/activity';\r\nimport {format} from \"date-fns\";\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                {activity.isCancelled &&\r\n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />\r\n                }\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image style={{marginBottom: 3}} size='tiny' circular \r\n                                    src={activity.host?.image || '/assets/user.png'}/>\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                                {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>Hosted by <Link to={`/profiles/${activity.host?.userName}`}>\r\n                                {activity.host?.displayName}\r\n                            </Link></Item.Description>\r\n                            {activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='orange'>You are hosting this activity</Label>\r\n                                </Item.Description>\r\n                            )}\r\n                            {activity.isGoing && !activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='green'>You are going to this activity</Label>\r\n                                </Item.Description>\r\n                            )}\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock'/> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                    <Icon name='marker'/> {activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment>\r\n                <ActivityListItemAttendee attendees={activity.attendees!} />\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button\r\n                    as={Link}\r\n                    to={`/activities/${activity.id}`}\r\n                    color='teal'\r\n                    floated='right'\r\n                    content='View'\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n}","import {observer} from 'mobx-react-lite';\nimport React, { Fragment } from 'react';\nimport {Header} from 'semantic-ui-react';\nimport {useStore} from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\nexport default observer(function ActivityList() {\n    const {activityStore} = useStore();\n    const {groupedActivites} = activityStore;\n\n    return (\n        <>\n            {groupedActivites.map(([group, activities]) => (\n                <Fragment key={group}>\n                    <Header sub color='teal'>{group}</Header>\n                    {activities.map(activity => (\n                        <ActivityListItem  key={activity.id} activity={activity}/>\n                    ))}\n                </Fragment>\n            ))}\n        </>\n    );\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport {Header, Menu} from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nexport default observer(function ActivityFilters() {\r\n    const {activityStore: {predicate, setPredicate}} = useStore();\r\n    \r\n    return (\r\n        <>\r\n            <Menu vertical size='large' style={{width: '100%', marginTop: 27}}>\r\n                <Header icon='filter' attached color='teal' content='Filters' />\r\n                <Menu.Item \r\n                    content='All Activities' \r\n                    active={predicate.has('all')}\r\n                    onClick={() => setPredicate('all', true)}\r\n                />\r\n                <Menu.Item \r\n                    content=\"I'm going\"\r\n                    active={predicate.has('isGoing')}\r\n                    onClick={() => setPredicate('isGoing', true)}\r\n                />\r\n                <Menu.Item \r\n                    content=\"I'm hosting\"\r\n                    active={predicate.has('isHost')}\r\n                    onClick={() => setPredicate('isHost', true)}\r\n                />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar \r\n                onChange={date => setPredicate('startDate', date as Date)}\r\n                value={predicate.get('startDate') || new Date()}\r\n            />\r\n        </>\r\n    )\r\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import {observer} from 'mobx-react-lite';\nimport {Grid, Loader} from 'semantic-ui-react';\nimport {useStore} from '../../../app/stores/store';\nimport ActivityList from './ActivityList';\nimport React, {useEffect, useState} from \"react\";\nimport ActivityFilters from './ActivityFilters';\nimport { PagingParams } from '../../../app/models/pagination';\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nexport default observer(function ActivityDashboard() {\n    const {activityStore} = useStore();\n    const {loadActivities, loadingInitial, activityRegistry, setPagingParams, pagination} = activityStore;\n    const [loadingNext, setLoadingNext] = useState(false);\n    \n    function handleGetNext() {\n        setLoadingNext(true);\n        setPagingParams(new PagingParams(pagination!.currentPage + 1))\n        loadActivities().then(() => setLoadingNext(false));\n    }\n\n    useEffect(() => {\n        if (activityRegistry.size <= 1) loadActivities();\n    }, [loadActivities, activityRegistry.size]);\n\n    return (\n        <Grid>\n            <Grid.Column width=\"10\">\n                {loadingInitial && !loadingNext ? (\n                    <>\n                        <ActivityListItemPlaceholder />\n                        <ActivityListItemPlaceholder />\n                    </>\n                ) : (\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={handleGetNext}\n                        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n                        initialLoad={false}\n                    >\n                        <ActivityList/>\n                    </InfiniteScroll>\n                )}\n            </Grid.Column>\n            <Grid.Column width=\"6\">\n                <ActivityFilters />\n            </Grid.Column>\n            <Grid.Column width='10'>\n                <Loader active={loadingNext} />\n            </Grid.Column>\n        </Grid>\n    );\n})","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    \r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error && (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            )}\r\n        </Form.Field>\r\n    )\r\n}","import {ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n    const {userStore} = useStore();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => \r\n                setErrors({error: 'Invalid email or password'}))}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors}) => (\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Passwortd' type='password' />\r\n                    <ErrorMessage \r\n                        name='error' \r\n                        render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error} />}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from 'react';\r\nimport {Message} from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({errors}: Props) {\r\n    console.log(errors)\r\n    return (\r\n        <Message error>\r\n            \r\n        </Message>\r\n    )\r\n}","import {ErrorMessage, Form, Formik} from 'formik';\r\nimport {observer} from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport {Button, Header} from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport {useStore} from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n    const {userStore} = useStore();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName: '', userName: '', email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error =>\r\n                setErrors({error}))}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                userName: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='userName' placeholder='Username'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Passwortd' type='password'/>\r\n                    <ErrorMessage\r\n                        name='error'\r\n                        render={() => <ValidationErrors errors={errors.error}/>}\r\n                    />\r\n                    <Button\r\n                        disabled={!isValid || !dirty || isSubmitting}\r\n                        loading={isSubmitting}\r\n                        positive\r\n                        content='Register'\r\n                        type='submit'\r\n                        fluid\r\n                    />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n)","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Container, Header, Segment, Image, Button} from \"semantic-ui-react\";\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n    const {userStore: {isLoggedIn}, modalStore} = useStore();\r\n    \r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom: 12}} />\r\n                    Reactivities\r\n                </Header>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to Reactivities'/>\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to activities\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n                            Login\r\n                        </Button>\r\n                        <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\r\n                            Register\r\n                        </Button>\r\n                    </>\r\n                )}\r\n            </Container> \r\n        </Segment>\r\n    )\r\n})","import React from 'react';\r\nimport {Dimmer, Loader} from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function loadingComponent({inverted = true, content = 'Loading...'}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error && (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            )}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n    const [field, meta, helpers] = useField(props.name);\r\n    \r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select\r\n                clearable\r\n                options={props.options}\r\n                value={field.value || null}\r\n                onChange={(e, d) => helpers.setValue(d.value)}\r\n                onBlur={() => helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n            />\r\n            {meta.touched && meta.error && (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            )}\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions = [\r\n    {text: 'Drinks', value: 'drinks'},\r\n    {text: 'Culture', value: 'culture'},\r\n    {text: 'Film', value: 'film'},\r\n    {text: 'Food', value: 'food'},\r\n    {text: 'Travel', value: 'travel'},\r\n    {text: 'Music', value: 'music'},\r\n] ","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker \r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error && (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            )}\r\n        </Form.Field>\r\n    )\r\n}","import {observer} from 'mobx-react-lite';\nimport React, {useEffect, useState} from 'react';\nimport {Link, useHistory, useParams} from 'react-router-dom';\nimport {Button, Header, Segment} from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport {useStore} from '../../../app/stores/store';\nimport {v4 as uuid} from 'uuid';\nimport {Form, Formik} from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../../app/common/form/MyTextInput';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport MySelectInput from '../../../app/common/form/MySelectInput';\nimport {categoryOptions} from '../../../app/common/options/categoryOptions';\nimport MyDateInput from '../../../app/common/form/MyDateInput';\nimport {ActivityFormValues} from '../../../app/models/activity';\n\nexport default observer(function ActivityForm() {\n    const {activityStore} = useStore();\n    const {createActivity, updateActivity, loadActivity, loadingInitial} = activityStore;\n\n    const history = useHistory();\n    const {id} = useParams<{ id: string }>();\n\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n    const validationSchema = Yup.object({\n        title: Yup.string().required('The activity title is required'),\n        description: Yup.string().required('The activity Description is required'),\n        category: Yup.string().required(),\n        date: Yup.string().required('The date is required').nullable(),\n        venue: Yup.string().required(),\n        city: Yup.string().required(),\n    });\n\n    useEffect(() => {\n        if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\n    }, [id, loadActivity])\n\n    function handleFormSubmit(activity: ActivityFormValues) {\n        if (!activity.id) {\n            let newActivity = {\n                ...activity,\n                id: uuid()\n            };\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\n        } else {\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\n        }\n    }\n\n    if (loadingInitial) return <LoadingComponent/>;\n\n    return (\n        <Segment clearing>\n            <Formik\n                validationSchema={validationSchema}\n                enableReinitialize\n                initialValues={activity}\n                onSubmit={values => handleFormSubmit(values)}\n            >\n                {({handleSubmit, isValid, isSubmitting, dirty}) => (\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete=\"off\">\n                        <Header content='Activity Details' sub color='teal'/>\n                        <MyTextInput name='title' placeholder='Title'/>\n                        <MyTextArea rows={3} placeholder=\"Description\" name='description'/>\n                        <MySelectInput options={categoryOptions} placeholder=\"Category\" name='category'/>\n                        <MyDateInput\n                            placeholderText=\"Date\"\n                            name='date'\n                            showTimeSelect\n                            timeCaption='time'\n                            dateFormat='MMMM d, yyyy h:mm aa'\n                        />\n                        <Header content='Location Details' sub color='teal'/>\n                        <MyTextInput placeholder=\"City\" name='city'/>\n                        <MyTextInput placeholder=\"Venue\" name='venue'/>\n                        <Button\n                            disabled={!isValid || isSubmitting || !dirty}\n                            loading={isSubmitting}\n                            floated=\"right\"\n                            positive\n                            type=\"submit\"\n                            content=\"Submit\"\n                        />\n                        <Button as={Link} to='/activities' floated=\"right\" type=\"button\" content=\"Cancel\"/>\n                    </Form>\n                )}\n            </Formik>\n        </Segment>\n    );\n})","import { Formik, Form, Field, FieldProps } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\nimport * as Yup from 'yup';\r\nimport {formatDistanceToNow} from \"date-fns\";\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\r\n    const {commentStore} = useStore();\r\n    \r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId])\r\n    \r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                <Formik\r\n                    onSubmit={(values, {resetForm}) =>\r\n                        commentStore.addComment(values).then(() => resetForm())}\r\n                    initialValues={{body: ''}}\r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}\r\n                >\r\n                    {({isSubmitting, isValid, handleSubmit}) => (\r\n                        <Form className='ui form'>\r\n                            <Field name='body'>\r\n                                {(props: FieldProps) => (\r\n                                    <div style={{position: \"relative\"}}>\r\n                                        <Loader active={isSubmitting} />\r\n                                        <textarea\r\n                                            placeholder='Enter your comment (Enter to submit, SHIFT + Enter for new line)'\r\n                                            rows={2}\r\n                                            {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if (e.key === 'Enter' && e.shiftKey) {\r\n                                                    return;\r\n                                                }\r\n                                                if (e.key === 'Enter' && !e.shiftKey) {\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={comment.image || '/assets/user.png'}/>\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${comment.userName}`}>\r\n                                    {comment.displayName}\r\n                                </Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n                                <Comment.Actions>\r\n                                    <Comment.Action>Reply</Comment.Action>\r\n                                </Comment.Actions>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport {format} from \"date-fns\";\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\r\n    const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore();\r\n    \r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                {activity.isCancelled && \r\n                    <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}} \r\n                           ribbon color='red' content='Cancelled' />\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.userName}`}>\r\n                                        {activity.host?.displayName}\r\n                                    </Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost ? (\r\n                    <>\r\n                        <Button \r\n                            color={activity.isCancelled ? 'green' : 'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n                            onClick={cancelActivityToggle}\r\n                            loading={loading}\r\n                        />\r\n                        <Button as={Link} to={`/manage/${activity.id}`} \r\n                                disabled={activity.isCancelled} color='orange' floated='right'>\r\n                            Manage Event\r\n                        </Button>\r\n                    </>\r\n                ) : activity.isGoing ? (\r\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\r\n                ) : (\r\n                    <Button disabled={activity.isCancelled} loading={loading} \r\n                            onClick={updateAttendance} color='teal'>Join Activity</Button>\r\n                )}\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport {format} from \"date-fns\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport {Image, Item, Label, List, Segment} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\nimport {observer} from 'mobx-react-lite'\r\nimport {Activity} from '../../../app/models/activity'\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({activity: {attendees, host}}: Props) {\r\n    if (!attendees) return null;\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{border: 'none'}}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee => (\r\n                        <Item style={{position: 'relative'}} key={attendee.userName}>\r\n                            {attendee.userName === host?.userName &&\r\n                            <Label\r\n                                style={{position: 'absolute'}}\r\n                                color='orange'\r\n                                ribbon='right'\r\n                            >Host</Label>}\r\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'}/>\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Item.Header as='h3'>\r\n                                    <Link to={`/profiles/${attendee.userName}`}>{attendee.displayName}</Link>\r\n                                </Item.Header>\r\n                                {attendee.following && (\r\n                                    <Item.Extra style={{color: 'orange'}}>Following</Item.Extra>\r\n                                )}                                \r\n                            </Item.Content>\r\n                        </Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n    )\r\n})\r\n\r\n\r\n","import {observer} from 'mobx-react-lite';\nimport React, {useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {Grid} from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport {useStore} from '../../../app/stores/store';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\n\nexport default observer(function ActivityDetails() {\n    const {activityStore} = useStore();\n    const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\n    const {id} = useParams<{ id: string }>();\n\n    useEffect(() => {\n        if (id) loadActivity(id);\n        return () => clearSelectedActivity();\n    }, [id, loadActivity, clearSelectedActivity])\n\n    if (loadingInitial || !activity) return <LoadingComponent/>;\n\n    return (\n        <Grid>\n            <Grid.Column width={10}>\n                <ActivityDetailedHeader activity={activity}/>\n                <ActivityDetailedInfo activity={activity}/>\n                <ActivityDetailedChat activityId={activity.id} />\n            </Grid.Column>\n            <Grid.Column width={6}>\n                <ActivityDetailedSidebar activity={activity} />\n            </Grid.Column>\n        </Grid>\n    );\n})","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\r\n    }\r\n  \r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors && \r\n                <ValidationErrors errors={errors} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Icon, Segment} from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere but could not find this :(\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import React from 'react';\r\nimport {useStore} from '../../app/stores/store';\r\nimport {Container, Header, Segment} from \"semantic-ui-react\";\r\nimport {observer} from 'mobx-react-lite';\r\n\r\nexport default observer(function ServerError() {\r\n    const {commonStore} = useStore();\r\n\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error'/>\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message}/>\r\n            {commonStore.error?.details && (\r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal'/>\r\n                    <code style={{marginTop: 10}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            )}\r\n        </Container>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n    const {modalStore} = useStore();\r\n    \r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import {Form, Formik} from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\nimport MyTextArea from '../../app/common/form/MyTextArea';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\r\n    const {profileStore: {profile, updateProfile}} = useStore();\r\n    \r\n    const validationSchema = Yup.object({\r\n        displayName: Yup.string().required('The display name is required')\r\n    });\r\n    \r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            initialValues={{displayName: profile?.displayName, bio: profile?.bio}}\r\n            onSubmit={values => updateProfile(values).then(() => setEditMode(false))}\r\n        >\r\n            {({isValid, isSubmitting, dirty}) => (\r\n                <Form className='ui form'>\r\n                    <MyTextInput name='displayName' placeholder='Display Name' />\r\n                    <MyTextArea name='bio' placeholder='Bio' rows={3} />\r\n                    <Button\r\n                        disabled={!dirty || !isValid}\r\n                        loading={isSubmitting}\r\n                        floated='right'\r\n                        positive\r\n                        type='submit'\r\n                        content='Update profile'\r\n                    />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React, { useState } from 'react';\r\nimport {Button, Grid, GridColumn, Header, Tab} from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileEditForm from './ProfileEditForm';\r\n\r\nexport default function ProfileAbout() {\r\n    const {profileStore: {profile, isCurrentUser}} = useStore();\r\n    const [editMode, setEditMode] = useState(false);\r\n    \r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\r\n                    {isCurrentUser && (\r\n                        <Button\r\n                            floated='right' basic\r\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\r\n                            onClick={() => setEditMode(!editMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <GridColumn width={16}>\r\n                    {editMode ? (\r\n                        <ProfileEditForm setEditMode={setEditMode} />\r\n                    ) : (\r\n                        <span style={{whiteSpace: \"pre-wrap\"}}>{profile?.bio}</span>\r\n                    )}\r\n                </GridColumn>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, {SyntheticEvent, useEffect } from 'react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport { Tab, Header, TabProps, Grid, Card, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n\r\nconst panes = [\r\n    { menuItem: 'Future Events', pane: { key: 'future' } },\r\n    { menuItem: 'Past Events', pane: { key: 'past' } },\r\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n]\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const {profileStore: {\r\n        loadActivities,\r\n        loadingActivities,\r\n        activities\r\n    }} = useStore();\r\n    \r\n    useEffect(() => {\r\n        loadActivities();\r\n    }, [loadActivities])\r\n\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadActivities(panes[data.activeIndex as number].pane.key);\r\n    };\r\n    \r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid.Column width={16}>\r\n                <Header\r\n                    floated='left'\r\n                    icon='calendar'\r\n                    content='Activities'\r\n                />\r\n            </Grid.Column>\r\n            <Tab\r\n                menu={{secondary: true, pointing: true}}\r\n                panes={panes}\r\n                onTabChange={(e, data) => handleTabChange(e, data)}\r\n            />\r\n            <br />\r\n            <Card.Group itemsPerRow={4}>\r\n                {activities.map(activity => (\r\n                    <Card\r\n                        as={Link}\r\n                        to={`/activities/${activity.id}`}\r\n                        key={activity.id}\r\n                    >\r\n                        <Image\r\n                            src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                            style={{ minHeight: 100, objectFit: 'cover' }}\r\n                        />\r\n                        <Card.Content>\r\n                            <Card.Header\r\n                                textAlign='center'>{activity.title}</Card.Header>\r\n                            <Card.Meta textAlign='center'>\r\n                                <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                            </Card.Meta>\r\n                        </Card.Content>\r\n                    </Card>\r\n                ))}\r\n            </Card.Group>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport {Card, Grid, Header, Tab} from \"semantic-ui-react\";\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const {profileStore: {profile, followings, loadingFollowings, activeTab}} = useStore();\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header\r\n                        floated='left' \r\n                        icon='user' \r\n                        content={activeTab === 3 \r\n                            ? `People following ${profile?.displayName}` \r\n                            : `People ${profile?.displayName} is following`} \r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.userName} profile={profile} />\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoCropperWidget({imagePreview, setCropper}: Props) {\r\n    return (\r\n        <Cropper \r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport {Header, Icon} from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoDropWidget({setFiles}: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n    \r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n    \r\n    const onDrop = useCallback(acceptedFiles => {\r\n        setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        })));\r\n    }, [setFiles])\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n    return (\r\n        <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n            <input {...getInputProps()} />\r\n            <Icon name='upload' size='huge' />\r\n            <Header content='Drop image here' />\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Button, Grid, Header} from 'semantic-ui-react';\r\nimport PhotoCropperWidget from './PhotoCropperWidget';\r\nimport PhotoDropWidget from './PhotoDropWidget';\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n    \r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n        }\r\n    }, [files])\r\n    \r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo' />\r\n                <PhotoDropWidget setFiles={setFiles} />\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize Photo' />\r\n                {files && files.length > 0 && (\r\n                    <PhotoCropperWidget setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload' />\r\n                {files && files.length > 0 &&\r\n                    <>\r\n                        <div className='img-preview' style={{minHeight: 200, overflow: \"hidden\"}} />\r\n                        <Button.Group widths={2}>\r\n                            <Button loading={loading} onClick={onCrop} positive icon='check'/>\r\n                            <Button disabled={loading} onClick={() => setFiles([])} icon='close'/>\r\n                        </Button.Group>\r\n                    </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, {SyntheticEvent, useState} from 'react';\r\nimport {Card, Header, Tab, Image, Grid, Button } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\r\nimport {Photo, Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({profile}: Props) {\r\n    const {profileStore: {isCurrentUser, uploadPhoto, uploading, loading, \r\n        setMainPhoto, deletePhoto}} = useStore();\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n    const [target, setTarget] = useState('');\r\n    \r\n    function handlePhotoUpload(file: Blob) {\r\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n    }\r\n    \r\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n    \r\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n    }\r\n    \r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos' />\r\n                    {isCurrentUser && (\r\n                        <Button floated='right' basic \r\n                                content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n                                onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode ? (\r\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n                    ) : (\r\n                        <Card.Group itemsPerRow={5}>\r\n                            {profile.photos?.map(photo => (\r\n                                <Card key={photo.id}>\r\n                                    <Image src={photo.url} />\r\n                                    {isCurrentUser && (\r\n                                        <Button.Group fluid widths={2}>\r\n                                            <Button \r\n                                                basic\r\n                                                color='green'\r\n                                                content='Main'\r\n                                                name={`setmain-${photo.id}`}\r\n                                                disabled={photo.isMain || (target.includes(photo.id) && loading)}\r\n                                                loading={target === `setmain-${photo.id}` && loading}\r\n                                                onClick={e => handleSetMainPhoto(photo, e)}\r\n                                            />\r\n                                            <Button \r\n                                                basic\r\n                                                color='red'\r\n                                                icon='trash'\r\n                                                name={`delete-${photo.id}`}\r\n                                                disabled={photo.isMain || (target.includes(photo.id) && loading)}\r\n                                                loading={target === `delete-${photo.id}` && loading}\r\n                                                onClick={e => handleDeletePhoto(photo, e)}\r\n                                            />\r\n                                        </Button.Group>\r\n                                    )}\r\n                                </Card>\r\n                            ))}\r\n                        </Card.Group>\r\n                    )}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({profile}: Props) {\r\n    const {profileStore} = useStore();\r\n    \r\n    const panes = [\r\n        {menuItem: 'About', render: () => <ProfileAbout />},\r\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\r\n        {menuItem: 'Events', render: () => <ProfileActivities />},\r\n        {menuItem: 'Followers', render: () => <ProfileFollowings />},\r\n        {menuItem: 'Following', render: () => <ProfileFollowings />},\r\n    ]\r\n    \r\n    return (\r\n        <Tab \r\n            menu={{fluid: true, vertical: true}}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport {Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({profile}: Props) {\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName} />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount} />\r\n                        <Statistic label='Following' value={profile.targetCount} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowButton profile={profile} />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage() {\r\n    const {userName} = useParams<{userName: string}>();\r\n    const {profileStore: {loadingProfile, loadProfile, profile, setActiveTab}} = useStore();\r\n    \r\n    useEffect(() => {\r\n        loadProfile(userName);\r\n        return () => setActiveTab(0);\r\n    }, [loadProfile, userName, setActiveTab]);\r\n    \r\n    if (loadingProfile) return <LoadingComponent content='Loading profile...' />\r\n    \r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile && \r\n                    <>\r\n                        <ProfileHeader profile={profile} />\r\n                        <ProfileContent profile={profile} />\r\n                    </>\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import React from \"react\";\r\nimport {Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => isLoggedIn ? <Component {...props} /> : <Redirect to='/' /> }\r\n        />\r\n    )\r\n}","import React, {Fragment, useEffect} from 'react';\nimport {Container} from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport {ToastContainer} from \"react-toastify\";\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport { observer } from 'mobx-react-lite';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n    const location = useLocation();\n    const {commonStore, userStore} = useStore();\n    const {appLoaded} = commonStore;\n    \n    useEffect(() => {\n        if (commonStore.token) {\n            userStore.getUser().finally(() => commonStore.setAppLoaded());\n        } else {\n            commonStore.setAppLoaded();\n        }\n    }, [commonStore, userStore])\n    \n    if (!appLoaded) return <LoadingComponent />;\n    \n    return (\n        <>\n            <ToastContainer position='bottom-right' hideProgressBar />\n            <ModalContainer />\n            <Route exact path='/' component={HomePage} />\n            <Route \n                path={'/(.+)'}\n                render={() => (\n                    <>\n                        <NavBar/>\n                        <Container style={{marginTop: '7em'}}>\n                            <Switch>\n                                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                                <PrivateRoute path='/profiles/:userName' component={ProfilePage} />\n                                <PrivateRoute path='/errors' component={TestErrors} />\n                                <PrivateRoute path='/server-error' component={ServerError} />\n                                <PrivateRoute component={NotFound} />;\n                            </Switch>\n                        </Container>\n                    </>\n                )}\n            />\n        </>\n    );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store, StoreContext} from './app/stores/store';\nimport {Router} from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n    <StoreContext.Provider value={store}>\n        <Router history={history}>\n            <ScrollToTop />\n            <App/>\n        </Router>\n    </StoreContext.Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}